#Check that the correct toolchain for the platform is being used
REQUIRE_TOOLCHAIN(msp430-gcc)

#Define platform specific options
PLATFORM_PARAM(${PLATFORM_PREFIX}_MCU "cc430f5137" STRING "The cc430 MCU type")
PLATFORM_PARAM(${PLATFORM_PREFIX}_RADIO "none" STRING "The radio chip used") # TODO always CC1101
PLATFORM_PARAM(${PLATFORM_PREFIX}_UART_BAUDRATE "115200" STRING "The baudrate used by the UART port")
PLATFORM_OPTION(${PLATFORM_PREFIX}_DEBUGPINS "Enable/Disable Hardware Debug Pins support (see 'hwdebug.h')" TRUE)
#Restrict the number of possible options for the radio option in the usual manner...
SET_PROPERTY(CACHE ${PLATFORM_PREFIX}_RADIO PROPERTY STRINGS "cc1101;none")

#Add a 'global' definition for the specific MCU and -mmcu (needed by toolchain)
ADD_GLOBAL_DEFINITIONS("-D${${PLATFORM_PREFIX}_MCU}" "-mmcu=${${PLATFORM_PREFIX}_MCU}")

#Make the 'inc' directory available so 'platform.h' can be found
GLOBAL_INCLUDE_DIRECTORIES(inc)

#Make the 'binary platform dir' available so the 'platform_defs.h' file
#(Generated by PLATFORM_BUILD_SETTINGS_FILE) can be found
GLOBAL_INCLUDE_DIRECTORIES("${CMAKE_CURRENT_BINARY_DIR}")

#Set platform specific compile options
INSERT_C_FLAGS(AFTER "-ffunction-sections -fdata-sections -Os") # TODO minimal code size,
                                                                # but strips debug symbols as well (regression in toolchain, should be fixed in future)
#INSERT_C_FLAGS(AFTER "-Os")

#Add platform specific linker flags
INSERT_LINKER_FLAGS(BEFORE OBJECTS INSERT "")
INSERT_LINKER_FLAGS(BEFORE LINK_LIBRARIES INSERT "-lcrt") # explicitly link crt again, otherwise we get an undefined reference to main()
INSERT_LINKER_FLAGS(AFTER LINK_LIBRARIES INSERT "-Wl,--gc-sections -Xlinker -Map=map.txt")

#Include the sources for the cc430 chip
ADD_CHIP("cc430")

#Include the sources for the radio chip, if needed
IF(NOT ("${${PLATFORM_PREFIX}_RADIO}" STREQUAL "none"))
    ADD_CHIP(${${PLATFORM_PREFIX}_RADIO})
ENDIF()

#Add additional definitions to the 'platform_defs.h' file generated by cmake
PLATFORM_HEADER_DEFINE(NUMBER ${PLATFORM_PREFIX}_UART_BAUDRATE)
PLATFORM_HEADER_DEFINE(BOOL ${PLATFORM_PREFIX}_DEBUGPINS)

#Build the 'platform_defs.h' settings file
PLATFORM_BUILD_SETTINGS_FILE()


#Define the 'platform library'. Every platform must define a 'PLATFORM' object library
ADD_LIBRARY(PLATFORM OBJECT 
    cc430_main.c
    cc430_leds.c
    libc_overrides.c
    inc/platform.h
)
