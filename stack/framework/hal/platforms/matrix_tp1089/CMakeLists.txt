#
# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra
# lowpower wireless sensor communication
#
# Copyright 2015 University of Antwerp
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#Check that the correct toolchain for the platform is being used
REQUIRE_TOOLCHAIN(gcc-arm-embedded)

#Define platform specific options
PLATFORM_PARAM(${PLATFORM_PREFIX}_MCU "MKL02Z32VFG4" STRING "The MCU of the Matrix TP1089 board")
PLATFORM_PARAM(${PLATFORM_PREFIX}_RADIO "cc1101" STRING "The radio chip connected to the TP1089 board")
#PLATFORM_PARAM(${PLATFORM_PREFIX}_UART_BAUDRATE "115200" STRING "The baudrate used by the UART port") # TODO
#PLATFORM_OPTION(${PLATFORM_PREFIX}_DEBUGPINS "Enable/Disable Hardware Debug Pins support (see 'hwdebug.h')" TRUE) # TODO
#Restrict the number of possible options for the radio option in the usual manner...
SET_PROPERTY(CACHE ${PLATFORM_PREFIX}_RADIO PROPERTY STRINGS "cc1101")

#Add a 'global' definition for the specific MCU
ADD_GLOBAL_DEFINITIONS("-D${${PLATFORM_PREFIX}_MCU}" "-DCPU_${${PLATFORM_PREFIX}_MCU}")

#Make the 'inc' directory available so 'platform.h' can be found
GLOBAL_INCLUDE_DIRECTORIES(inc)

#Make the 'binary platform dir' available so the 'platform_defs.h' file
#(Generated by PLATFORM_BUILD_SETTINGS_FILE) can be found
GLOBAL_INCLUDE_DIRECTORIES("${CMAKE_CURRENT_BINARY_DIR}")

#Set platform specific compile options
INSERT_C_FLAGS(AFTER "-O0" "-g3" "-mcpu=cortex-m0plus" "-mthumb" "-MMD" "-MP" "-fmessage-length=0" "-fno-builtin" "-mno-sched-prolog" "-ffunction-sections" "-fdata-sections")

#Add platform specific linker flags
INSERT_LINKER_FLAGS(BEFORE OBJECTS INSERT "-specs=nano.specs" "-specs=nosys.specs" "-Wl,-gc-sections")
INSERT_LINKER_FLAGS(BEFORE LINK_LIBRARIES INSERT "-Wl,--start-group -lgcc -lc -lnosys -Wl,--end-group")
#INSERT_LINKER_FLAGS(AFTER LINK_LIBRARIES INSERT "-lgcc -lc -lnosys -Wl,--end-group")

#Include the sources for the kl02z chip
ADD_CHIP("kl02z")

#Include the sources for the radio chip, if needed
IF(NOT ("${${PLATFORM_PREFIX}_RADIO}" STREQUAL "none"))
    ADD_CHIP(${${PLATFORM_PREFIX}_RADIO})
ENDIF()

#Add additional definitions to the 'platform_defs.h' file generated by cmake
#TODO PLATFORM_HEADER_DEFINE(NUMBER ${PLATFORM_PREFIX}_UART_BAUDRATE)
#TODO PLATFORM_HEADER_DEFINE(BOOL ${PLATFORM_PREFIX}_DEBUGPINS)

#Build the 'platform_defs.h' settings file
PLATFORM_BUILD_SETTINGS_FILE()


#Define the 'platform library'. Every platform must define a 'PLATFORM' object library
ADD_LIBRARY(PLATFORM OBJECT
    tp1089_main.c
#			    platform_leds.c
#			    platform_userbutton.c
#			    platform_debug.c
#                            libc_overrides.c
#                            inc/platform.h
#                            inc/userbutton.h
)
