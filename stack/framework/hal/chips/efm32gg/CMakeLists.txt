IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
    #note: they're two different params. This is on purpose
    ADD_GLOBAL_DEFINITIONS("-DDEBUG_EFM=1" "-DDEBUG=1")
ENDIF()

#Add the linker script to use to the linker flags
INSERT_LINKER_FLAGS(BEFORE OBJECTS FLAGS "-T${CMAKE_CURRENT_SOURCE_DIR}/CMSIS/device/linker/efm32gg.ld")

ENABLE_LANGUAGE(ASM)
SET_PROPERTY(SOURCE efm32gg/CMSIS/device/src/startup_gcc_efm32gg.s PROPERTY LANGUAGE ASM)
INCLUDE_DIRECTORIES(CMSIS/include
		    CMSIS/device/include
		    emlib/inc
		    kits/common/drivers
		    )

##Export the 'inc' directory globally		    
GLOBAL_INCLUDE_DIRECTORIES("inc")

#Export the em libs to the platform directory ONLY
#Please note we include 'inc' here since for complicated cmake reasons directories exported 
#with 'GLOBAL_INCLUDE_DIRECTORIES'from chip directories are not exported to the platform directory
PLATFORM_INCLUDE_DIRECTORIES(CMSIS/include
		    CMSIS/device/include
		    emlib/inc
		    kits/common/drivers
		    inc_platform
		    inc
		    )

#An object library with name '${CHIP_LIBRARY_NAME}' MUST be generated by th CMakeLists.txt file for every chip
ADD_LIBRARY (${CHIP_LIBRARY_NAME} OBJECT
                    CMSIS/device/src/system_efm32gg.c
                    CMSIS/device/src/startup_gcc_efm32gg.s
                    emlib/src/em_assert.c
                    emlib/src/em_system.c
                    emlib/src/em_cmu.c
                    emlib/src/em_emu.c
                    emlib/src/em_gpio.c
                    emlib/src/em_usart.c
                    emlib/src/em_rtc.c
                    emlib/src/em_dma.c
                    emlib/src/em_int.c
                    kits/common/drivers/dmactrl.c
                    efm32gg_mcu.c
                    efm32gg_uart.c
                    efm32gg_spi.c
                    efm32gg_atomic.c
                    efm32gg_timer.c
                    efm32gg_system.c                    
                    )
